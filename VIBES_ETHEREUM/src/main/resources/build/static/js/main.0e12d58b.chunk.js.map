{"version":3,"sources":["components/Home.js","components/StatsCard.js","components/StatsCardContainer.js","components/TimeseriesChart.js","components/GraphCard.js","components/GraphCardContainer.js","components/AgTable.js","components/PlusMinusControl.js","components/Controls.js","components/Logs.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","bootNodes","nodesNum","txNum","accountsNum","bootAccNum","txBatch","blockGasLimit","poolSize","minConn","maxConn","difficulty","gasLimit","gasUsed","handleSubmit","bind","assertThisInitialized","handleBootNodesChange","handleNodesNumChange","handleTxNumChange","handleAccountsNumChange","handleBootAccNumChange","handleBlockGasLimitChange","handlePoolSizeChange","handleMinConnChange","handleMaxConnChange","handleDifficultyChange","handleGasLimitChange","handleGasUsedChange","e","setState","target","value","event","console","log","preventDefault","fetch","method","body","JSON","stringify","headers","Headers","Content-Type","react_default","a","createElement","className","card","interactive","elevation","Elevation","TWO","onSubmit","controlGroup","fill","vertical","formGroup","helperText","label","labelInfo","name","numericInput","onChange","handleTxBatchChange","type","disabled","class","placeholder","buttons","leftIcon","intent","text","Component","StatsCard","ONE","style","color","icon","iconName","iconSize","unit","StatsCardContainer","src_components_StatsCard","global_data","blockNum","toPrecision","uncleCount","pendingTx","blockTime","peers","gasSpending","propTime","TimeSeriesChart","_ref","chartData","es6","width","height","margin","top","right","left","bottom","data","dataKey","domain","tickFormatter","unixTime","moment","format","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","stroke","fillOpacity","GraphCard","TimeseriesChart","GraphCardContainer","src_components_GraphCard","graph_data","columns","headerName","field","AgTable","main","columnDefs","rowData","state_data","enableColResize","autoSizeColumns","PlusMinusControl","Controls","handleStop","FOUR","onClick","divider","src_components_PlusMinusControl","Logs","App","map","local_data","txCost","visibility","home","logs","dashboard","globalEventSource","EventSource","localEventSource","_this2","onmessage","globalEventData","localEventData","nodeState","attr","parse","update","defineProperty","$set","graphDataHandler","_unused","temp_graph_data","assign","nodeTemp","time","concat","temp","pos","_unused2","mapTemp","length","_unused3","navbar","Group","align","Alignment","LEFT","Heading","Divider","handleHomeClick","handleLogsClick","handleDashboardClick","src_components_Home","src_components_Logs","src_components_StatsCardContainer","src_components_GraphCardContainer","components_AgTable","src_components_Controls","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0e12d58b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Home.css';\nimport { Button, Card, Elevation,FormGroup, NumericInput, ControlGroup} from \"@blueprintjs/core\";\n\n\nclass Home extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            bootNodes : 3,\n            nodesNum : 3,\n            txNum : 20000,\n            accountsNum : 10,\n            bootAccNum : 10,\n            txBatch : 20,\n            blockGasLimit : 10,\n            poolSize : 100,\n            minConn : 2,\n            maxConn : 5,\n            difficulty : 17179869184,\n            gasLimit : 63000,\n            gasUsed : 0\n        };\n    \n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleBootNodesChange = this.handleBootNodesChange.bind(this);\n        this.handleNodesNumChange = this.handleNodesNumChange.bind(this);\n        this.handleTxNumChange = this.handleTxNumChange.bind(this);\n        this.handleAccountsNumChange = this.handleAccountsNumChange.bind(this); \n        this.handleBootAccNumChange = this.handleBootAccNumChange.bind(this);\n        this.handleBlockGasLimitChange = this.handleBlockGasLimitChange.bind(this);        \n        this.handlePoolSizeChange = this.handlePoolSizeChange.bind(this);\n        this.handleMinConnChange = this.handleMinConnChange.bind(this);\n        this.handleMaxConnChange = this.handleMaxConnChange.bind(this);\n        this.handleDifficultyChange = this.handleDifficultyChange.bind(this);\n        this.handleGasLimitChange = this.handleGasLimitChange.bind(this);\n        this.handleGasUsedChange = this.handleGasUsedChange.bind(this);\n    }\n\n    handleBootNodesChange(e) {\n        this.setState({\n            bootNodes: e.target.value\n        });\n    }\n\n    handleNodesNumChange(e) {\n        this.setState({\n            nodesNum: e.target.value\n        });\n    }\n\n    handleTxNumChange(e) {\n        this.setState({\n            txNum: e.target.value\n        });\n    }\n\n    handleTxBatchChange(e) {\n        this.setState({\n            txBatch: e.target.value\n        });\n    }\n\n    handleAccountsNumChange(e) {\n        this.setState({\n            accountsNum: e.target.value\n        });\n    }\n\n    handleBootAccNumChange(e) {\n        this.setState({\n            txBatch: e.target.value\n        });\n    }\n\n    handleBlockGasLimitChange(e) {\n        this.setState({\n            blockGasLimit: e.target.value\n        });\n    }\n\n    handlePoolSizeChange(e) {\n        this.setState({\n            poolSize: e.target.value\n        });\n    }\n\n    handleMinConnChange(e) {\n        this.setState({\n            minConn: e.target.value\n        });\n    }\n\n    handleMaxConnChange(e) {\n        this.setState({\n            maxConn: e.target.value\n        });\n    }\n\n    handleDifficultyChange(e) {\n        this.setState({\n            difficulty: e.target.value\n        });\n    }\n\n    handleGasLimitChange(e) {\n        this.setState({\n            gasLimit: e.target.value\n        });\n    }\n\n    handleGasUsedChange(e) {\n        this.setState({\n            gasUsed: e.target.value\n        });\n    }\n\n\n    handleSubmit(event) {\n        console.log(\"HERE\")\n        event.preventDefault();\n        console.log(this.state)\n        fetch('http://localhost:8080/input', {\n          method: 'POST',\n          body: JSON.stringify(this.state),\n          headers: new Headers({\n            'Content-Type': 'application/json'\n        })\n        });\n\n    }\n    \n    render() {\n        return (\n            <div  className=\"Home\">\n                <Card interactive={false} elevation={Elevation.TWO}>\n                    <h3 className=\"center\">Edit the configuration to start the eVIBES simulator</h3>\n                    <form onSubmit={this.handleSubmit}>\n                        <div className=\"Settings\">\n                        <div className=\"Group top_margin\"> \n                            <h5 className=\"center\">Boot node configuration</h5>\n                            <ControlGroup fill={true} vertical={false} className=\"center-components\">\n                                <FormGroup\n                                    helperText=\"Initial number of nodes that will be initialized using the Genesis block\"\n                                    label=\"Number of Boot nodes\"\n                                    labelInfo=\"(required)\"\n                                    className=\"FormGrp\"\n                                    name=\"bootNodes\"\n                                >\n                                    <NumericInput value={this.state.bootNodes} onChange={this.handleBootNodesChange}/>\n                                </FormGroup>\n                                <FormGroup\n                                    helperText=\"Initial number of Accounts that will be initialized using the Genesis block\"\n                                    label=\"Number of Initial Accounts\"\n                                    labelInfo=\"(required)\"\n                                    className=\"FormGrp\"\n                                    name=\"initAcc\"\n                                >\n                                    <NumericInput value={this.state.accountsNum} onChange={this.handleAccountsNumChange}/>\n                                </FormGroup>\n                            </ControlGroup>\n                        </div>\n                        \n\n                        <div className=\"Group top_margin\"> \n                            <h5 className=\"center\">Transaction configuration</h5>\n                            <ControlGroup fill={true} vertical={false} className=\"center-components\">\n                                <FormGroup\n                                    helperText=\"These are the total number of transactions that will be generated combined in all the batches\"\n                                    label=\"Number of Transaction\"\n                                    labelInfo=\"(required)\"\n                                    className=\"FormGrp\"\n                                    name=\"txNum\"\n                                >\n                                    <NumericInput value={this.state.txNum} onChange={this.handleTxNumChange}/>\n                                </FormGroup>\n                                <FormGroup\n                                    helperText=\"Based will be created based on the on the transaction rate.\"\n                                    label=\"Transactions in a batch\"\n                                    labelInfo=\"(required)\"\n                                    className=\"FormGrp\"\n                                    name=\"txBatch\"\n                                >\n                                    <NumericInput value={this.state.txBatch} onChange={this.handleTxBatchChange}/>\n                                </FormGroup>\n                            </ControlGroup>\n                        </div>\n                        <div className=\"Group top_margin\"> \n                            <ControlGroup fill={true} vertical={false} className=\"center-components\">\n                                <FormGroup\n                                    helperText=\"Rate at which transactions will be generated. i.e Time for generating a batch of transactions\"\n                                    label=\"Rate of transactions\"\n                                    labelInfo=\"(required)\"\n                                    className=\"FormGrp\"\n                                    name=\"txRate\"\n                                >\n                                    <NumericInput value={0.5}/>\n                                </FormGroup>\n                            </ControlGroup>\n                        </div>\n\n                        <div className=\"Group top_margin\"> \n                            <h5 className=\"center\">Post Initialization configuration</h5>\n                            <ControlGroup fill={true} vertical={false} className=\"center-components\">\n                                <FormGroup\n                                    helperText=\"These are the total number of nodes in the simulation\"\n                                    label=\"Number of Nodes\"\n                                    labelInfo=\"(required)\"\n                                    className=\"FormGrp\"\n                                    name=\"nodesNum\"\n                                >\n                                    <NumericInput value={this.state.nodesNum} onChange={this.handleNodesNumChange}/>\n                                </FormGroup>\n                                <FormGroup\n                                    helperText=\"Accounts that will be generated during the simulation\"\n                                    label=\"Number of Accounts\"\n                                    labelInfo=\"(required)\"\n                                    className=\"FormGrp\"\n                                    name=\"accNum\"\n                                >\n                                    <NumericInput value={this.state.accountsNum} onChange={this.handleAccountsNumChange}/>\n                                </FormGroup>\n                            </ControlGroup>\n                        </div>\n                        <div className=\"Group top_margin\"> \n                            <ControlGroup fill={true} vertical={false} className=\"center-components\">\n                                <FormGroup\n                                    helperText=\"Number of peer connections per node\"\n                                    label=\"Min Peers per Node\"\n                                    labelInfo=\"(required)\"\n                                    className=\"FormGrp\"\n                                    name=\"minPeers\"\n                                >\n                                    <NumericInput value={this.state.minConn} onChange={this.handleMinConnChange}/>\n                                </FormGroup>\n                                <FormGroup\n                                        helperText=\"Number of peer connections per nod\"\n                                        label=\"Max Peers per node\"\n                                        labelInfo=\"(required)\"\n                                        className=\"FormGrp\"\n                                        name=\"maxPeers\"\n                                    >\n                                    <NumericInput value={this.state.maxConn} onChange={this.handleMaxConnChange}/>\n                                </FormGroup>\n                            </ControlGroup>\n                        </div>\n                        <div className=\"Group top_margin\"> \n                            <h5 className=\"center\">Genesis Block configuration</h5>\n                            <div className=\"Group top_margin\"> \n                            <ControlGroup fill={true} vertical={false} className=\"center-components\">\n                                <FormGroup\n                                    helperText=\"Hash of the parent Block\"\n                                    label=\"Parent Hash\"\n                                    labelInfo=\"(default)\"\n                                    className=\"FormGrp\"\n                                >\n                                    <input type=\"text\" disabled={true} class=\"bp3-input\" placeholder=\"Filter histogram...\" />\n                                </FormGroup>\n                                <FormGroup\n                                        helperText=\"Hash of the list of Ommer Blocks\"\n                                        label=\"Ommer Hash\"\n                                        labelInfo=\"(default)\"\n                                        className=\"FormGrp\"\n                                    >\n                                    <input type=\"text\" disabled={true} class=\"bp3-input\" placeholder=\"Filter histogram...\" />\n                                </FormGroup>\n                            </ControlGroup>\n                        </div>\n                        <div className=\"Group top_margin\"> \n                            <ControlGroup fill={true} vertical={false} className=\"center-components\">\n                                <FormGroup\n                                    helperText=\"Benificiary account address\"\n                                    label=\"Benificiary\"\n                                    labelInfo=\"(default)\"\n                                    className=\"FormGrp\"\n                                >\n                                    <input type=\"text\" disabled={true} class=\"bp3-input\" placeholder=\"Filter histogram...\" />\n                                </FormGroup>\n                                <FormGroup\n                                        helperText=\"Initial difficulty for genesis block\"\n                                        label=\"Difficulty\"\n                                        labelInfo=\"(required)\"\n                                        className=\"FormGrp\"\n                                        name=\"genDiff\"\n                                    >\n                                    <NumericInput value={this.state.difficulty} onChange={this.handleDifficultyChange}/>\n                                </FormGroup>\n                            </ControlGroup>\n                        </div>\n                        <div className=\"Group top_margin\"> \n                            <ControlGroup fill={true} vertical={false} className=\"center-components\">\n                                <FormGroup\n                                    helperText=\"Initial Gas limit for genesis block\"\n                                    label=\"Gas Limit\"\n                                    labelInfo=\"(required)\"\n                                    className=\"FormGrp\"\n                                    name=\"genGasLimit\"\n                                >\n                                    <NumericInput value={this.state.gasLimit} onChange={this.handleGasLimitChange}/>\n                                </FormGroup>\n                                <FormGroup\n                                        helperText=\"Initial Gas used for genesis block\"\n                                        label=\"Gas Used\"\n                                        labelInfo=\"(required)\"\n                                        className=\"FormGrp\"\n                                        name=\"genGasUsed\"\n                                    >\n                                    <NumericInput value={this.state.gasUsed} onChange={this.handleGasUsedChange}/>\n                                </FormGroup>\n                            </ControlGroup>\n                        </div>\n                        <div className=\"Group top_margin\"> \n                            <ControlGroup fill={true} vertical={false} className=\"center-components\">\n                                <FormGroup\n                                    helperText=\"Initial block number\"\n                                    label=\"Number\"\n                                    labelInfo=\"(required)\"\n                                    className=\"FormGrp\"\n                                >\n                                    <NumericInput disabled={true} placeholder=\"Enter a number...\"/>\n                                </FormGroup>\n                            </ControlGroup>\n                        </div>\n                        </div>\n                        <div className=\"button\">\n                            <Button leftIcon=\"build\" intent=\"primary\" type=\"submit\" text=\"Save the settings\"/>\n                        </div>\n                    </div>\n                    </form>\n                </Card>\n            </div>        \n        );\n    }\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport './StatsCard.css';\nimport {Elevation, Card } from \"@blueprintjs/core\";\nimport { Icon } from \"@blueprintjs/core\";\n\n\n\nclass StatsCard extends Component {\n    render() {\n        return (\n            <Card interactive={false} elevation={Elevation.ONE} className=\"StatsCard\">\n                <div className=\"statContainer\" style={{color:this.props.color}}>\n                    <Icon className=\"statContainer-icon\" icon={this.props.iconName} iconSize={50}/>\n                    <div className=\"statContainer-displayContainer\">   \n                        <div className=\"statContainer-name\"><span>{this.props.name}</span></div>\n                        <div className=\"statContainer-stat\">\n                            <div className=\"statContainer-value\"><span>{this.props.value}</span></div>\n                            <div className=\"statContainer-unit\"><span>{this.props.unit}</span></div>\n                        </div>\n                    </div>\n                </div>\n            </Card>\n        );\n    }\n}\n\nexport default StatsCard;\n","import React, { Component } from 'react';\nimport './StatsCardContainer.css';\nimport StatsCard from './StatsCard';\n\nclass StatsCardContainer extends Component {\n  render() {\n    return (\n        <div className=\"StatsCardContainer\">\n            <StatsCard name=\"LATEST BLOCK\" value={this.props.global_data.blockNum.toPrecision(4)} unit=\"block num\" iconName=\"box\" color=\"#10a0de\"/>\n            <StatsCard name=\"UNCLES\" value={this.props.global_data.uncleCount.toPrecision(4)} unit=\"(curr/last 50)\" iconName=\"graph\" color=\"#10a0de\"/>\n            <StatsCard name=\"AVG PENDING TX\" unit=\"tx\" value={this.props.global_data.pendingTx.toPrecision(5)} iconName=\"cloud-upload\" color=\"#10a0de\"/>\n            <StatsCard name=\"AVG. BLOCK TIME\" unit=\"sec\" value={this.props.global_data.blockTime.toPrecision(5)} iconName=\"time\" color=\"#10a0de\"/>\n            <StatsCard name=\"DIFFICULTY\" unit=\"\" value={this.props.global_data.difficulty.toPrecision(5)} iconName=\"cog\" color=\"#10a0de\"/>\n            <StatsCard name=\"AVG PEERS\" value={this.props.global_data.peers.toPrecision(5)} iconName=\"desktop\" color=\"#10a0de\"/>\n            <StatsCard name=\"GAS SPENDING\" unit=\"gwei\" value={this.props.global_data.gasSpending.toPrecision(5)} iconName=\"euro\" color=\"#10a0de\"/>\n            <StatsCard name=\"GAS LIMIT\" unit=\"gas\" value={this.props.global_data.gasLimit.toPrecision(5)} iconName=\"tag\" color=\"#10a0de\"/>\n            <StatsCard name=\"AVG. NETWORK LATENCY\" unit=\"ms\" value={this.props.global_data.propTime.toPrecision(5)} iconName=\"cell-tower\" color=\"#10a0de\"/>\n        </div> \n    );\n  }\n}\n\nexport default StatsCardContainer;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport moment from 'moment'\nimport {linearGradient, AreaChart,Area } from 'recharts';\nimport {\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from 'recharts'\n\n\nconst TimeSeriesChart = ({ chartData }) => (\n  <ResponsiveContainer width = {300} height = {200} margin={{ top: 10, right: 30, left: 0, bottom: 0 }}>\n    <AreaChart data={chartData}>\n        <XAxis\n            dataKey = 'time'\n            domain = {['auto', 'auto']}\n            name = 'Time'\n            tickFormatter = {(unixTime) => moment(unixTime).format('HH:mm Do')}\n            type = 'number'\n        />\n        <YAxis dataKey = 'value' name = 'Value' />\n        <defs>\n            <linearGradient id=\"colorPv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n            <stop offset=\"5%\" stopColor=\"#82ca9d\" stopOpacity={0.8}/>\n            <stop offset=\"95%\" stopColor=\"#82ca9d\" stopOpacity={0}/>\n            </linearGradient>\n        </defs>\n        <Tooltip />\n        <Area type=\"monotone\" dataKey=\"value\" stroke=\"#82ca9d\" fillOpacity={1} fill=\"url(#colorPv)\" />\n    </AreaChart>\n  </ResponsiveContainer>\n)\n\nTimeSeriesChart.propTypes = {\n  chartData: PropTypes.arrayOf(\n    PropTypes.shape({\n      time: PropTypes.number,\n      value: PropTypes.number\n    })\n  ).isRequired\n}\n\nexport default TimeSeriesChart\n\n\n","import React, { Component } from 'react';\nimport './GraphCard.css';\nimport {Elevation, Card } from \"@blueprintjs/core\";\nimport TimeSeriesChart from './TimeseriesChart';\n\n\nclass GraphCard extends Component {\n  render() {\n    return (\n        <Card interactive={false} elevation={Elevation.ONE} className=\"GraphCard\">\n            <div className=\"graphContainer\">\n                <div className=\"graphContainer-name\"><span>{this.props.name}</span></div>\n                <div className=\"graphContainer-graph\">\n                    <span>\n                    <TimeSeriesChart chartData={this.props.chartData}/>\n                    </span></div>\n            </div>\n        </Card>\n    );\n  }\n}\n\nexport default GraphCard;","import React, { Component } from 'react';\nimport './GraphCardContainer.css';\nimport GraphCard from './GraphCard';\n\nclass GraphCardContainer extends Component {\n  render() {\n    return (\n        <div className=\"GraphCardContainer\">\n            <GraphCard name=\"BLOCKTIME\" chartData={this.props.graph_data[\"blockTime\"]}/>\n            <GraphCard name=\"DIFFICULTY\" chartData={this.props.graph_data[\"difficulty\"]}/>\n            <GraphCard name=\"GAS LIMIT\" chartData={this.props.graph_data[\"gasLimit\"]}/>\n            <GraphCard name=\"PENDING TX\" chartData={this.props.graph_data[\"pendingTx\"]}/>\n            <GraphCard name=\"GAS SPENDING\" chartData={this.props.graph_data[\"gasSpending\"]}/>\n        </div>\n    );\n  }\n}\n\nexport default GraphCardContainer;\n","import React, { Component } from 'react';\nimport {AgGridReact} from 'ag-grid-react';\n\nimport 'ag-grid/dist/styles/ag-grid.css';\nimport 'ag-grid/dist/styles/ag-theme-material.css';\n\nconst columns = [{\n  headerName: 'NAME',\n  field: 'id'\n},{\n  headerName: 'PEERS',\n  field: 'peers'\n},{\n  headerName: 'AVG. PEERS',\n  field: 'avgPeers'\n},{\n  headerName: 'PENDING TRANSACTIONS',\n  field: 'pendingTx'\n},{\n  headerName: 'AVG. PENDING TREANSACTIONS',\n  field: 'avgPendingTx'\n},{\n  headerName: 'GAS ACCUMULATED',\n  field: 'poolGasAcc'\n},{\n  headerName: 'LAST BLOCK MINED',\n  field: 'blockNum'\n},{\n  headerName: 'LAST MINED BLOCKTIME',\n  field: 'blockTime'\n},{\n  headerName: 'AVG BLOCK TIME',\n  field: 'avgBlockTime'\n},{\n  headerName: 'DIFFICULTY',\n  field: 'difficulty'\n},{\n  headerName: 'AVG. DIFFICULTY',\n  field: 'avgDifficulty'\n},{\n  headerName: 'TRANSACTION COST',\n  field: 'txCost'\n},{\n  headerName: 'AVG TRANSACTION COST',\n  field: 'avgTxCost'\n},{\n  headerName: 'GAS SPENDING',\n  field: 'gasSpending'\n},{\n  headerName: 'AVG. GAS SPENDING',\n  field: 'avgGasSpending'\n},{\n  headerName: 'GAS LIMIT',\n  field: 'gasLimit'\n},{\n  headerName: 'AVG GAS LIMIT',\n  field: 'avgGasLimit'\n},{\n  headerName: 'PROPOGATION TIME',\n  field: 'propTime'\n},{\n  headerName: 'AVG. PROPOGATION TIME',\n  field: 'avgPropTime'\n},{\n  headerName: 'NODE TYPE',\n  field: 'nodeType'\n},{\n  headerName: 'EVM STATE',\n  field: 'evmState'\n},{\n  headerName: 'POOL STATE',\n  field: 'poolState'\n},{\n  headerName: 'NODE STATE',\n  field: 'nodeState'\n}]\n\n\nclass AgTable extends Component {\n  render() {\n    return(\n      <div\n        className=\"ag-theme-material\"\n        style={{ \n        height: '400px', \n        width: '100%' }} >\n      <AgGridReact\n          columnDefs={columns}\n          rowData={this.props.state_data}\n          enableColResize={true}\n          autoSizeColumns={true}\n      />\n      </div>\n    )}\n  }\n  \n  export default AgTable;\n  ","import React, { Component } from 'react';\nimport './PlusMinusControl.css';\nimport { Button } from \"@blueprintjs/core\";\n\n\nclass PlusMinusControl extends Component {\n    render() {\n        return (\n            <div  className=\"PlusMinusControl\">\n                    <div className=\"AddIcon\"><Button icon=\"add\"/></div>\n                    <div className=\"NameTag\"><span>{this.props.name}</span></div>\n                    <div className=\"RemoveIcon\"><Button icon=\"remove\"/></div>\n            </div>        \n        );\n    }\n}\n\nexport default PlusMinusControl;\n","import React, { Component } from 'react';\nimport './Controls.css';\nimport {Elevation, Card } from \"@blueprintjs/core\";\nimport { Button, Divider } from \"@blueprintjs/core\";\nimport PlusMinusControl from './PlusMinusControl'\n\n\n\n\nclass Controls extends Component {\n    constructor(props) {\n        super(props)\n        this.handleStop = this.handleStop.bind(this);\n    }\n\n    handleStop(event) {\n        console.log(\"HERE\")\n        fetch('http://localhost:8080/stop', {\n          method: 'GET',\n        });\n\n    }\n\n    render() {\n        return (\n            <div>\n                <Card interactive={true} elevation={Elevation.FOUR} className=\"Controls\">\n                <div className=\"StartStopControl\">\n                    <Button icon=\"play\">PLAY</Button>\n                    <Button icon=\"stop\" onClick={this.handleStop}>STOP</Button>\n                </div>\n                <Divider className=\"Divider\"/>\n                <div className=\"NodeControl\">\n                    <PlusMinusControl name=\"NODES\"/>\n                </div>\n                <div className=\"TxRateControl\">\n                    <PlusMinusControl name=\"TX. RATE\"/>\n                </div>\n                <div className=\"MinerRateControl\">\n                    <PlusMinusControl name=\"MINER GAS LIMIT\"/>\n                </div>\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default Controls;\n","import React, { Component } from 'react';\nimport './Logs.css';\nimport {Card, Elevation} from \"@blueprintjs/core\";\n\n\nclass Logs extends Component {\n    render() {\n        return (\n            <div  className=\"Logs\">\n                <Card interactive={true} elevation={Elevation.TWO}>\n                    <h3 className=\"center\">Logs from the eVIBES server</h3>\n                    <div className=\"Terminal\">\n\n                    </div>\n                </Card>\n            </div>        \n        );\n    }\n}\n\nexport default Logs;","\nimport React, { Component } from 'react';\nimport './App.css';\n\nimport Home from './components/Home.js'\nimport StatsCardContainer from './components/StatsCardContainer';\nimport GraphCardContainer from './components/GraphCardContainer';\nimport AgTable from './components/AgTable'\nimport Controls from './components/Controls'\nimport update from 'immutability-helper';\nimport 'react-table/react-table.css'\nimport {Navbar, Button, Alignment} from \"@blueprintjs/core\";\nimport Logs from './components/Logs';\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            data: [], map: {}, \n            local_data: {}, \n            global_data: {\n                'blockNum' : 0,\n                'uncleCount' : 0,\n                'blockTime' : 0,\n                'txCost' : 0,\n                'gasSpending' : 0,\n                'gasLimit' : 0,\n                'peers' : 0,\n                'pendingTx' : 0,\n                'propTime' : 0,\n                'difficulty' : 0,\n            },\n            graph_data: {\n                blockTime:[],\n                difficulty:[],\n                propTime:[],\n                gasLimit:[],\n                pendingTx:[],\n                gasSpending:[],\n                txCost:[],\n            },\n            visibility : {\n                home: true,\n                logs: false,\n                dashboard: false   \n            }\n        }\n\n        this.globalEventSource = new EventSource('http://localhost:8080/global-events');\n        this.localEventSource = new EventSource('http://localhost:8080/local-events');\n        //this.stateEventSource = new EventSource('http://localhost:8080/state-events');\n    }\n\n    componentDidMount() {\n        this.globalEventSource.onmessage = (e) => this.globalEventData(e.data);\n        this.localEventSource.onmessage = (e) => this.localEventData(e.data);\n        //this.stateEventSource.onmessage = (e) => this.stateEventData(e.data);\n    }\n\n    globalEventData(nodeState) {\n        let state = {}\n        try{\n          state = JSON.parse(nodeState)\n          for (var attr in state) {\n              this.setState({\n                global_data: update(this.state.global_data,  {[attr]: {$set: state[attr]}})\n              })\n          }\n          this.graphDataHandler(state)\n        }\n        catch{console.log(\"empty data packet\")}\n    }\n\n    graphDataHandler(state) {\n        console.log(state)\n        try{\n            let temp_graph_data = Object.assign({}, this.state.graph_data)\n            for(var attr in temp_graph_data) {\n                var nodeTemp = {\"value\":state[attr], \"time\": state[\"timestamp\"]}\n                temp_graph_data[attr] = temp_graph_data[attr].concat(nodeTemp)\n            }\n            this.setState({graph_data: temp_graph_data})\n        } catch(e) {console.log(e)}\n    }\n\n    stateEventData(nodeState) {\n        let temp = {}\n        let state = {}\n        let pos = -1\n        try{\n          state = JSON.parse(nodeState)\n          console.log(nodeState)\n          //console.log(this.state.data)\n          temp[\"id\"] = state[\"id\"]\n          temp[state[\"attr\"]] = state[\"value\"]\n        }\n        catch{console.log(\"empty data packet\")}\n    \n        try{\n          if(state[\"id\"] in this.state.map) {\n            pos = this.state.map[state[\"id\"]]\n          }\n          if(pos === -1) {\n            this.setState({data: this.state.data.concat(temp)})\n            let mapTemp = Object.assign({}, this.state.map)\n            mapTemp[state[\"id\"]] = this.state.data.length -1 \n            this.setState({map: mapTemp})\n          } else {\n            //Update existing element\n            if(state[\"attr\"] in this.state.data[pos]) {\n              this.setState({\n                data: update(this.state.data, {[pos]: {[state[\"attr\"]]: {$set: state[\"value\"]}}})\n              })\n            } else {\n              //add the attribute\n              let nodeTemp = Object.assign({}, this.state.data[pos])\n              nodeTemp[state[\"attr\"]] = state[\"val\"]\n              this.setState({\n                data: update(this.state.data, {[pos]: {$set: nodeTemp}})\n              })\n            }\n          }\n        //console.log(this.state.data) \n        } catch(e) {console.log(e)}\n    }\n\n    localEventData(nodeState) {\n        let state = {}\n        let pos = -1\n\n        try{\n          state = JSON.parse(nodeState)\n          var id = state[\"clientId\"]\n          delete state[\"clientId\"]\n          state[\"id\"] = id\n          if(state[\"id\"] in this.state.map) {\n            pos = this.state.map[state[\"id\"]]\n          }\n          if(pos === -1) {\n            this.setState({data: this.state.data.concat(state)})\n            let mapTemp = Object.assign({}, this.state.map)\n            mapTemp[state[\"id\"]] = this.state.data.length -1 \n            this.setState({map: mapTemp})\n          } else {\n            var temp = Object.assign({}, this.state.data[pos], state)\n            this.setState({\n                data: update(this.state.data, {[pos]: {$set: temp}})\n                })\n            }\n        } catch{console.log(\"empty data packet for local stats\")}\n    }\n\n    handleHomeClick() {\n        this.setState({visibility:{home: true}})\n    }\n    handleLogsClick() {\n        this.setState({visibility:{logs: true}})\n    }\n    handleDashboardClick() {\n        this.setState({visibility:{dashboard: true}})\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Navbar>\n                    <Navbar.Group align={Alignment.LEFT}>\n                        <Navbar.Heading>eVIBES</Navbar.Heading>\n                        <Navbar.Divider />\n                        {this.state.visibility.dashboard &&  <Button className=\"bp3-minimal\" onClick={this.handleHomeClick.bind(this)} icon=\"home\" text=\"Home\" />}\n                        {this.state.visibility.dashboard &&  <Button className=\"bp3-minimal\" onClick={this.handleLogsClick.bind(this)} icon=\"document\" text=\"Logs\" />}\n                        {this.state.visibility.logs && <Button className=\"bp3-minimal\" onClick={this.handleDashboardClick.bind(this)} icon=\"dashboard\" text=\"Dashboard\" />}\n                    </Navbar.Group>\n                </Navbar>\n                <div className=\"Root\">\n                    {this.state.visibility.home && <div className=\"Home\">\n                        <Home/>\n                        <center>\n                        {this.state.visibility.home && <Button className=\"bp3-intent-primary\" onClick={this.handleDashboardClick.bind(this)} icon=\"arrow-right\" text=\"GOTO Dashboard\" />}\n                        </center>\n                    </div>}\n                    {this.state.visibility.logs &&  <div className=\"Logs\">\n                        <Logs/>\n                    </div>}\n                    {this.state.visibility.dashboard &&  <div className=\"Dashboard\">\n                        <br></br>\n                        <StatsCardContainer global_data={this.state.global_data}/>\n                        <br></br>\n                        <GraphCardContainer graph_data={this.state.graph_data}/>\n                        <div className=\"tableClass\">\n                            <AgTable state_data={this.state.data}/>\n                        </div>\n                        <div className=\"FixedControl\">\n                            <Controls/>\n                        </div>\n                    </div>}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'react-table/react-table.css'\n\nReactDOM.render(\n<div>\n    <App/>\n</div>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}